spec:

  templates:

  - name: train-perceptron
    parent: generic-task

    inputs:

      parameters:
      - name: docker-image
        value: z-ml
      - name: docker-tag
        value: latest

      - name: command
        value: python3 main.py

      artifacts:
      - name: data
        path: /app/data.json
      - name: main-script
        path: /app/main.py
        raw:
          data: |
            from modular.utils import save_json 
            from modular.utils import read_json
            from modular.functions import train_perceptron
            from modular.functions import make_predictions
            from modular.functions import score_model
            
            data = read_json('data.json')
            print("TYPE")
            print(data.keys())
            print(type(data))
            print(data)
            features = data["features"]
            labels = data["labels"]

            model = train_perceptron(features, labels)
            predictions = make_predictions(model, features)
            score = score_model(features, labels)

            result = {}
            result["predictions"] = predictions.to_json()
            result["score"] = score.to_json()

            save_json(result, 'result.json')
  
    outputs:
      artifacts:
      - name: result
        path: /app/result.json